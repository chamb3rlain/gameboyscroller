/*******
 * Constructing a side-scrolling LED stock ticker controlled by a repurposed Gameboy
 * data file
 *
 *******/

#define BITMESSAGECOUNT 8
unsigned char* messageArray[] = {
  chinese,
  iLoveYou,
  bonVoyage,
  dad,  
  digits,
  nuts1,
  nuts2,
  nuts3,
};

unsigned char chinese[] = {
0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xD7,0xB3,0x55,
0x41,0x57,0xB3,0xD7,0xFF,
0xFF,0xFF,0xEF,0xED,0xED,
0x81,0xED,0xED,0xEF,0xFF,
0xFD,0xF3,0x87,0xAB,0xA7,
0x3F,0x8B,0xB3,0xAD,0xFB,
0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,
};


unsigned char iLoveYou[] = {
  0xFF,0xFF,0xFF,0xFF,0xFF,
  0xFF,0x7B,0x03,0x7B,0xFF,
  0xFF,0xFF,0xFF,0xFF,0xFF,
  0x8F,0x07,0x03,0x81,0xC0,
  0x81,0x03,0x07,0x8F,0xFF,
  0xFF,0xFF,0xFF,0xFF,0xFF,
  0x1F,0xDF,0xC1,0x1F,0xFF,
  0x01,0x7D,0x7D,0x01,0xFF,
  0x01,0xFD,0xFD,0x01,0xFF,
  0xFF,0xFF,0xFF,0xFF,0xFF,
};

unsigned char bonVoyage[] = {
  0x1,0x6D,0x6D,0x93,0xFF,
  0x83,0x7D,0x7D,0x83,0xFF,
  0x1,0x8F,0xF3,0x1,0xFF,
  0xFF,0xFF,0xFF,0x3F,0xC7,
  0xF9,0xC7,0x3F,0xFF,0x83,
  0x7D,0x7D,0x83,0xFF,0x3F,
  0xDF,0xE1,0xDF,0x3F,0xF9,
  0xC7,0x37,0xC7,0xF9,0xFF,
  0x83,0x7D,0x6D,0x6B,0xA1,
  0xFF,0x1,0x6D,0x6D,0x7D
};

unsigned char dad[] = {
   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xD7,0xB3,0x55,0x41,0x57,0xB3,0xD7
, 0xFF,0xFF,0xFF,0xFF,0xBF,0xAD,0xA1,0x33,0xA1,0xAD,0xBF,0xFF,0xFF,0xFF,0xF9,0x3
, 0x57,0x55,0x1,0xFF,0xF9,0x3,0x57,0x55,0x1,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
, 0xFF,0xFF
};

unsigned char digits[] = {
    0x07,0x37,0x67,0x07,0xFF
  , 0xFF,0xB7,0x07,0xF7,0xFF
  , 0xFF,0x47,0x57,0x17,0xFF
  , 0xFF,0x57,0x57,0x07,0xFF
  , 0x1F,0xDF,0x07,0xDF,0xFF	
  , 0xFF,0x17,0x57,0x47,0xFF
  , 0xFF,0x07,0x57,0x47,0xFF
  , 0x77,0x6F,0x5F,0x3F,0xFF
  , 0xFF,0x07,0x57,0x07,0xFF
  , 0xFF,0x17,0x57,0x07,0xFF
};


unsigned char nuts1[] = {
  0x1,0x3F,0xCF,0xF3,0x1,0xFF,0x3,0xFD,0xFD,0x3,0xFF,0x7F,0x1,0x7F,0xFF,0x9B
, 0x6D,0x6D,0xB3,0xFF,0xFF,0xFF,0xA3,0x5D,0xAD,0xF3,0xED,0xFF,0x3F,0xC7,0xF9,0xC7
, 0x3F,0xFF,0x83,0x7D,0x7D,0x83,0xFF,0x1,0xFD,0xFD,0x7F,0x1,0x7F,0xFF,0x9B,0x6D
, 0x6D,0xB3
};


unsigned char nuts2[] = {
   0x1,0x3F,0xCF,0xF3,0x1,0xFF,0x3,0xFD,0xFD,0x3,0xFF,0x7F,0x1,0x7F,0xFF,0x9B
  , 0x6D,0x6D,0xB3,0xFF,0xFF,0xFF,0xA3,0x5D,0xAD,0xF3,0xED,0xFF,0xFF,0x3F,0xC7,0xF9
  , 0xC7,0x3F,0xFF,0x83,0x7D,0x83,0xFF,0x1,0xFD,0xFD,0x7F,0x1,0x7F,0xFF,0x9B,0x6D
  , 0x6D,0xB3
};

unsigned char nuts3[] = {
  0x1,0x1F,0xC3,0x1,0xFF,0x3,0xFD,0xFD,0x3,0xFF,0x7F,0x1,0x7F,0xFF,0x9B,0x6D
, 0x6D,0xB3,0xFF,0xFF,0xFF,0xFF,0xA3,0x5D,0xAD,0xF3,0xED,0xFF,0xFF,0x3F,0xC7,0xF9
, 0xC7,0x3F,0xFF,0x83,0x7D,0x83,0xFF,0x1,0xFD,0xFD,0x7F,0x1,0x7F,0xFF,0x9B,0x6D
, 0x6D,0xB3
};

unsigned char ascii[] = {
    0x00,0x00,0x00,0x00,0x00
  , 0x00,0xFE,0xFE,0xFE,0xFE
  , 0x00,0x00,0xFE,0xFE,0xFE
  , 0x00,0x00,0x00,0xFE,0xFE
  , 0x00,0x00,0x00,0x00,0xFE
  , 0xFE,0xFE,0xFE,0xFE,0x00
  , 0xFE,0xFE,0xFE,0x00,0x00	
  , 0xEF,0xDF,0x81,0xDF,0xEF  	//UP ARROW
  , 0xF7,0xFB,0x81,0xFB,0xF7		//DOWN ARROW
  , 0xEF,0xEF,0xAB,0xC7,0xEF		//RIGHT ARROW
  , 0xEF,0xC7,0xAB,0xEF,0xEF		//LEFT ARROW
  , 0xDD,0xDD,0x5,0xDD,0xDD		  //PLUS/MINUS
  , 0xFF,0x67,0x47,0x17,0xB7		//SQUARED
  , 0xFF,0x77,0x57,0x7,0xAF		  //CUBED
  , 0xEF,0xEF,0x29,0x29,0xEF		//DIVISION SIGN
  , 0xFD,0xDD,0xAD,0x75,0xFD  	//LESS THAN OR EQUAL
  , 0xE3,0xDD,0xDD,0xE3,0xDD		//ALPHA
  , 0xC1,0xAB,0xAB,0x83,0xD7		//BETA
  , 0x81,0xBF,0xBF,0x9F,0x9F		//GAMMA
  , 0xBF,0x81,0xBF,0x81,0xBF		//PI
  , 0x39,0x55,0x6D,0x7D,0x39		//SIGMA (CAP)
  , 0xE3,0xDD,0xDD,0xC3,0xDF		//SIGMA (SMALL)
  , 0xFD,0x81,0xFB,0x87,0xFB		//MU
  , 0x9F,0xBF,0x81,0xBF,0xBF		//TAU
  , 0x6D,0x55,0x11,0x55,0x6D		//PHI
  , 0xC7,0xAB,0x6D,0xAB,0xC7		//THETA
  , 0xCD,0xB1,0x7F,0xB1,0xCD		//OMEGA
  , 0xF3,0xAD,0x4D,0x4D,0xF3		//DELTA
  , 0xF3,0xED,0xE1,0xED,0xF3		//INFINITE
  , 0xC2,0xB9,0xA5,0x9D,0x43		//NULL SET
  , 0x83,0x6D,0x6D,0x6D,0xFF		//ELEMENT OF
  , 0x81,0x7F,0x7F,0x7F,0x81  	//INTERSECTION
  , 0xFF,0xFF,0xFF,0xFF,0xFF  // blank
  , 0xFF,0xFF,0x5,0xFF,0xFF	  // !
  , 0xFF,0x1F,0xFF,0x1F,0xFF  // "
  , 0xD7,0x1,0xD7,0x1,0xD7	  // #
  , 0xDB,0xAB,0x1,0xAB,0xB7	  // $ 
  , 0x3B,0x37,0xEF,0xD9,0xB9  // %
  , 0x93,0x6D,0x95,0xFB,0xF5  // &
  , 0xFF,0xEF,0x1F,0x3F,0xFF  // '
  , 0xFF,0xC7,0xBB,0x7D,0xFF  // (
  , 0xFF,0x7D,0xBB,0xC7,0xFF  // )
  , 0xAB,0xC7,0x1,0xC7,0xAB	  // *
  , 0xEF,0xEF,0x83,0xEF,0xEF  // +
  , 0xFF,0xFC,0xE2,0xE6,0xFF  // ,
  , 0xEF,0xEF,0xEF,0xEF,0xEF  // -
  , 0xFF,0xFF,0xF9,0xF9,0xFF  // .
  , 0xFB,0xF7,0xEF,0xDF,0xBF  // /
  , 0x83,0x7D,0x6D,0x7D,0x83  //0
  , 0xFF,0xBD,0x1,0xFD,0xFF   //1
  , 0xB1,0x6D,0x6D,0x6D,0x9D  //2
  , 0x7B,0x7D,0x6D,0x4D,0x33  //3
  , 0xE7,0xD7,0xB7,0x1,0xF7   //4
  , 0x1B,0x5D,0x5D,0x5D,0x63  //5
  , 0xC3,0xAD,0x6D,0x6D,0x73  //6
  , 0x7D,0x7B,0x77,0x6F,0x1F  //7
  , 0x93,0x6D,0x6D,0x6D,0x93  //8
  , 0x9D,0x6D,0x6D,0x6B,0x87  //9
  , 0xFF,0xFF,0xD7,0xFF,0xFF  //:
  , 0xFF,0xFD,0xD3,0xFF,0xFF  //
  , 0xFF,0xEF,0xD7,0xBB,0x7D	//<
  , 0xD7,0xD7,0xD7,0xD7,0xD7  //=
  , 0xFF,0x7D,0xBB,0xD7,0xEF  //>
  , 0xBF,0x7F,0x65,0x6F,0x9F  //?
  , 0x83,0x7D,0xBF,0x65,0x8D  //@
  , 0xC1,0xB7,0x77,0xB7,0xC1  //A
  , 0x1,0x6D,0x6D,0x6D,0x93   //B
  , 0x83,0x7D,0x7D,0x7D,0xBB  //C
  , 0x1,0x7D,0x7D,0x7D,0x83   //D
  , 0x1,0x6D,0x6D,0x6D,0x7D   //E
  , 0x1,0x6F,0x6F,0x6F,0x7F   //F
  , 0x83,0x7D,0x7D,0x75,0x31  //G
  , 0x1,0xEF,0xEF,0xEF,0x1    //H
  , 0xFF,0x7D,0x1,0x7D,0xFF   //I
  , 0xFB,0xFD,0x7D,0x3,0x7F   //J
  , 0x1,0xEF,0xD7,0xBB,0x7D   //K
  , 0x1,0xFD,0xFD,0xFD,0xFD   //L
  , 0x1,0xBF,0xC7,0xBF,0x1    //M
  , 0x1,0xDF,0xEF,0xF7,0x1    //N
  , 0x83,0x7D,0x7D,0x7D,0x83  //O
  , 0x1,0x6F,0x6F,0x6F,0x9F   //P
  , 0x83,0x7D,0x75,0x7B,0x85  //Q
  , 0x1,0x6F,0x67,0x6B,0x9D   //R
  , 0x9B,0x6D,0x6D,0x6D,0xB3  //S
  , 0x3F,0x7F,0x1,0x7F,0x3F   //T
  , 0x3,0xFD,0xFD,0xFD,0x3    //U
  , 0x7,0xFB,0xFD,0xFB,0x7    //V
  , 0x3,0xFD,0xE3,0xFD,0x3    //W
  , 0x39,0xD7,0xEF,0xD7,0x39  //X
  , 0x3F,0xDF,0xE1,0xDF,0x3F  //Y
  , 0x79,0x75,0x6D,0x5D,0x3D  //Z
  , 0xFF,0x1,0x7D,0x7D,0x7D    //[
  , 0xBF,0xDF,0xEF,0xF7,0xFB  //\
  , 0xFF,0xff,0xff,0xff,0xff  // WHAT THE?
  , 0xFF,0x7D,0x7D,0x7D,0x1    //]
  , 0xDF,0xBF,0x7F,0xBF,0xDF  //^
  , 0xFD,0xFD,0xFD,0xFD,0xFD  //_
  , 0xFF,0x3F,0x1F,0xEF,0xFF  //`
  , 0xFB,0xD5,0xD5,0xE1,0xFD  //a
  , 0x1,0xEB,0xDD,0xDD,0xE3   //b
  , 0xE3,0xDD,0xDD,0xDD,0xEB  //c
  , 0xE3,0xDD,0xDD,0xEB,0x1   //d
  , 0xE3,0xD5,0xD5,0xD5,0xE7  //e
  , 0xFF,0xEF,0x81,0x6F,0xBF  //f
  , 0xCE,0xB4,0xB4,0x8C,0xC2  //g
  , 0x1,0xEF,0xDF,0xDF,0xE1   //h
  , 0xFF,0xDD,0x41,0xFD,0xFF  //i
  , 0xFB,0xFD,0xFD,0x43,0xFF  //j
  , 0x1,0xF7,0xEB,0xDD,0xFF   //k
  , 0xFF,0x7D,0x1,0xFD,0xFF   //l
  , 0xC1,0xDF,0xE1,0xDF,0xE1  //m
  , 0xC1,0xEF,0xDF,0xDF,0xE1  //n
  , 0xE3,0xDD,0xDD,0xDD,0xE3  //o
  , 0x80,0xCE,0xB6,0xB6,0xCE  //p
  , 0xCE,0xB6,0xB6,0xCE,0x80  //q
  , 0xC1,0xEF,0xDF,0xDF,0xEF  //r
  , 0xED,0xD5,0xD5,0xD5,0xDB  //s
  , 0xDF,0xDF,0x3,0xDD,0xDB   //t
  , 0xC3,0xFD,0xFD,0xFB,0xC1  //u
  , 0xC7,0xFB,0xFD,0xFB,0xC7   //v
  , 0xC3,0xFD,0xF3,0xFD,0xC3  //w
  , 0xDD,0xEB,0xF7,0xEB,0xDD  //x
  , 0x9A,0xEC,0xEC,0xEC,0x82  //y
  , 0xDD,0xD9,0xD5,0xCD,0xDD  //z
  , 0xFF,0xEF,0x93,0x7D,0xFF  //{
  , 0xFF,0xFF,0x11,0xFF,0xFF  //|
  , 0xFF,0x7D,0x93,0xEF,0xFF  //}
  , 0xBF,0x7F,0xBF,0xDF,0xBF  //~
  , 0xFF,0xFF,0x21,0xFF,0xFF	// EXTRA
};
